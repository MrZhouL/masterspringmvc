buildscript {
    ext {
        springBootVersion = '2.0.2.RELEASE'
    }
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:0.5.1.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

jar {
    baseName = 'mesterSpringMvc'
    version = '0.0.1-SNAPSHOT'
}

group = 'masterSpringMvc'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
}


bootRun {
    sourceResources sourceSets.main
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    //JPA Data (We are going to use Repositories, Entities, Hibernate, etc...)
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'

    //use MySQL Connector-J
    compile 'mysql:mysql-connector-java'

    compile('org.springframework.boot:spring-boot-devtools')
    compile('org.webjars:materializecss:0.96.0')
    compile('org.webjars:jquery:2.1.4')
    compile "org.projectlombok:lombok:1.16.20"
    testCompile('org.springframework.boot:spring-boot-starter-test')

    //生成自己的配置元数据文件
    //annotationProcessor "org.springframework.boot：spring-boot-configuration-processor"


}

